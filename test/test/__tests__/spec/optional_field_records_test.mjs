// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Zora from "zora";
import * as OptionalFieldRecords from "../../../src/OptionalFieldRecords.mjs";

function testEqual(t, name, lhs, rhs) {
  t.test(name, (async function (t) {
          t.equal(lhs, rhs, name);
        }));
}

Zora.test("optional field record", (function (t) {
        var sample = {};
        sample["a"] = 1;
        sample["b"] = 1;
        var sampleRecord = {
          a: 1,
          b: 1
        };
        var encoded = OptionalFieldRecords.t0_encode(sampleRecord);
        testEqual(t, "encode", encoded, sample);
        var decoded = OptionalFieldRecords.t0_decode(sample);
        testEqual(t, "decode", decoded, {
              TAG: "Ok",
              _0: sampleRecord
            });
      }));

Zora.test("optional field record: array<int>", (function (t) {
        var sample = {};
        sample["a"] = 1;
        sample["bs"] = [1];
        var sampleRecord_bs = [1];
        var sampleRecord = {
          a: 1,
          bs: sampleRecord_bs
        };
        var encoded = OptionalFieldRecords.t1_encode(sampleRecord);
        testEqual(t, "encode", encoded, sample);
        var decoded = OptionalFieldRecords.t1_decode(sample);
        testEqual(t, "decode", decoded, {
              TAG: "Ok",
              _0: sampleRecord
            });
      }));

Zora.test("optional field record: array<variant>", (function (t) {
        var sample = {};
        sample["a"] = 1;
        sample["bs"] = ["B1"];
        var sampleRecord_bs = ["B1"];
        var sampleRecord = {
          a: 1,
          bs: sampleRecord_bs
        };
        var encoded = OptionalFieldRecords.t2_encode(sampleRecord);
        testEqual(t, "encode", encoded, sample);
        var decoded = OptionalFieldRecords.t2_decode(sample);
        testEqual(t, "decode", decoded, {
              TAG: "Ok",
              _0: sampleRecord
            });
      }));

Zora.test("optional field record: omit array<variant>", (function (t) {
        var sample = {};
        sample["a"] = 1;
        var encoded = OptionalFieldRecords.t2_encode({
              a: 1
            });
        testEqual(t, "encode", encoded, sample);
      }));

export {
  testEqual ,
}
/*  Not a pure module */
