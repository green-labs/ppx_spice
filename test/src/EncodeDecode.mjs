// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Spice from "./Spice.mjs";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function te_encode(v) {
  return Js_dict.fromArray(Spice.filterOptional([
                  [
                    "name",
                    Spice.stringToJson(v.name)
                  ],
                  [
                    "nickname",
                    Spice.optionToJson(Spice.stringToJson, v.nickname)
                  ]
                ]));
}

function td_decode(v) {
  if (!Array.isArray(v) && (v === null || typeof v !== "object") && typeof v !== "number" && typeof v !== "string" && typeof v !== "boolean") {
    return Spice.error(undefined, "Not an object", v);
  }
  if (!(typeof v === "object" && !Array.isArray(v))) {
    return Spice.error(undefined, "Not an object", v);
  }
  var match = Belt_Option.map(Js_dict.get(v, "name"), Spice.stringFromJson);
  if (match === undefined) {
    return Spice.error(undefined, "name missing", v);
  }
  if (match.TAG === "Ok") {
    var name = match._0;
    var match$1 = Belt_Option.map(Js_dict.get(v, "nickname"), (function (param) {
            return Spice.optionFromJson(Spice.stringFromJson, param);
          }));
    if (match$1 === undefined) {
      return {
              TAG: "Ok",
              _0: {
                name: name
              }
            };
    }
    if (match$1.TAG === "Ok") {
      return {
              TAG: "Ok",
              _0: {
                name: name,
                nickname: match$1._0
              }
            };
    }
    var e = match$1._0;
    return {
            TAG: "Error",
            _0: {
              path: ".nickname" + e.path,
              message: e.message,
              value: e.value
            }
          };
  }
  var e$1 = match._0;
  return {
          TAG: "Error",
          _0: {
            path: ".name" + e$1.path,
            message: e$1.message,
            value: e$1.value
          }
        };
}

export {
  te_encode ,
  td_decode ,
}
/* No side effect */
