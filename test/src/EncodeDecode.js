// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Spice = require("./Spice.js");
var Js_dict = require("rescript/lib/js/js_dict.js");
var Js_json = require("rescript/lib/js/js_json.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");

function te_encode(v) {
  return Js_dict.fromArray(Spice.filterOptional([
                  [
                    "name",
                    false,
                    Spice.stringToJson(v.name)
                  ],
                  [
                    "nickname",
                    true,
                    Spice.optionToJson(Spice.stringToJson, v.nickname)
                  ]
                ]));
}

function td_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Spice.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Spice.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var name = Spice.stringFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "name"), null));
  if (name.TAG === /* Ok */0) {
    var nickname = Spice.optionFromJson(Spice.stringFromJson, Belt_Option.getWithDefault(Js_dict.get(dict$1, "nickname"), null));
    if (nickname.TAG === /* Ok */0) {
      return {
              TAG: /* Ok */0,
              _0: {
                name: name._0,
                nickname: nickname._0
              }
            };
    }
    var e = nickname._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".nickname" + e.path,
              message: e.message,
              value: e.value
            }
          };
  }
  var e$1 = name._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".name" + e$1.path,
            message: e$1.message,
            value: e$1.value
          }
        };
}

exports.te_encode = te_encode;
exports.td_decode = td_decode;
/* No side effect */
